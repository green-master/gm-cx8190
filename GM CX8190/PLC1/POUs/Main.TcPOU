<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="Main" Id="{0fc71ecf-56d1-4789-9140-ae6c41febaf6}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Main
VAR
	// JaWa
	_iDbg:INT;	
	_download5:BOOL;
	//Enum1: FanControlTypes := FanControlTypes.Flow;
	GreenMaster: GreenMasterXXL_FB;
	StartupDone: BOOL;
	EventLog: EventLog;
	xxx: bool;
	Saver: FB_S_UPS_CX81xx;
	HostName: FB_GetHostName;
	UseReverse_C_QN1: BOOL;
	test1: bool;
	
	Std_Interface : Standard_Interface;
	ExtraAlarms_Interface: ExtraAlarms_Interface;
	SmokeControl_Interface: SmokeControl_Interface;

	Redundancy:Redundancy;
	ParallelUnits: ParallelUnits;
	
	GreenMasterDI: GreenMasterDI;
	GreenMasterDO: GreenMasterDO;
	GreenMasterAI: GreenMasterAI;
	GreenMasterAO: GreenMasterAO;
	GreenMasterAI2_RTU: GreenMasterAIU_ModbusRTU;
	AnySensorError: BOOL;
	{attribute 'TcEncoding':='UTF-8'}
	str: STRING;
	n: INT;
	
	DebugStop: BOOL;
	WritePersistentData: WritePersistentData;
	StartWritePersistentData: BOOL;
	SavedParameters: GreenMasterBaseParameters;
	DevMon: DeviationMonitor;
	DevValue: LREAL;
	TestPID: TestPID;
	fbTime : FB_LocalSystemTime := ( bEnable := TRUE, dwCycle := 1 );
	LastSecondsCounter: LINT;
    sTime: STRING;	
	sPart1: STRING;
	sPart2: STRING;
	ExceptionYet: BOOL;
	PTest: POINTER TO BYTE;
	Crash: BOOL;
	i: INT;
	w: WORD;
	Rr: LREAL;
	UseKL3464: BOOL;
	FreezeHysteresis: Hysteresis;
	CurrentFreezeAlarm: BOOL;
END_VAR
VAR PERSISTENT
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF NOT ExceptionYet THEN
	//__TRY
		EventLog(EventLogData := Globals.EventLog);
		IF NOT StartupDone THEN
			Globals.SystemStartTime := NowDT();
			EventLog.LogEvent(Message := 'Starting up', Kind := EventTypes.Information);
			//EventLog.LogEventJSON(Message := 'Test data $${KFactor} and $${PressureControl.SP}', Kind := EventTypes.Debug, VarAdr := ADR(GreenMaster.Parameters.Regulation.ExtractAir), VarSize := SIZEOF(GreenMaster.Parameters.Regulation.ExtractAir), VarType := 'AirParameters');
			Rr := 4;	
			i := -4;
			StartupDone := TRUE;
		END_IF
		SavedParameters := GreenMaster.GetParameters();
		Globals.SystemUpTime := DT_TO_DWORD(NowDT()) - DT_TO_DWORD(Globals.SystemStartTime);
		
		TestPID();
		
		str := '';
		FOR n := 0 TO GlobalSettings.MAX_COMPONENTS DO
			IF GlobalSettings.Components[n].Name = ComponentNames.NONE THEN
				EXIT;
			END_IF
			IF GlobalSettings.Components[n].EN THEN
				IF str <> '' THEN
					str := concat(str, ', ');
				END_IF
				str := concat(str, TO_STRING(GlobalSettings.Components[n].Name));
			END_IF
		END_FOR
		Globals.Components := str;
		
		HostName(bExecute := TRUE);
		// CX-503E98 CTH 1
		// CX-492F8F Diginet lab
		// CX-4F1CE6 NIBE AirSite lab
		// 
		Globals.HostName := HostName.sHostName; 
		IF F_ToUCase(HostName.sHostName) = 'CX-503E98' THEN
			UseReverse_C_QN1 := FALSE;
		ELSE
			UseReverse_C_QN1 := GreenMaster.Parameters.Io.AOutCalibration.C_QN1.InvertedOutput;
		END_IF
		
		IF F_ToUCase(HostName.sHostName) = 'STU_E6-LB02' THEN
			UseKL3464 := TRUE;
		END_IF
		IF (HostName.sHostName <> '') and (NOT GreenMaster.Parameters.System.ProjectDefaultSet) THEN			
			IF F_ToUCase(HostName.sHostName) = 'STU_E1-LB01' OR F_ToUCase(HostName.sHostName) = 'STU_E1-LB02' THEN
				GetComponent(Name := ComponentNames.PARALLEL_UNITS).EN := TRUE;
				GreenMaster.GetParameters().Regulation.Temperature.HeaterOutputDirection := HeaterOutputDirections.IncreaseToHeat;
				GreenMaster.GetParameters().Regulation.ExtractAir.Control.I := T#10M;
				GreenMaster.GetParameters().Regulation.SupplyAir.Control.I := T#10M;
				ADS_Standard.Tags.Settings.ExtractFanControl_I := GreenMaster.GetParameters().Regulation.ExtractAir.Control.I;
				ADS_Standard.Tags.Settings.SupplyFanControl_I := GreenMaster.GetParameters().Regulation.SupplyAir.Control.I;
				GreenMaster.GetParameters().Regulation.ExtractAir.KFactor := 151.4;
				GreenMaster.GetParameters().Regulation.ExtractAir.FireExhaust.EN := TRUE;
				GreenMaster.GetParameters().Regulation.ExtractAir.FireExhaust.Speed := 0.4;
				GreenMaster.GetParameters().Regulation.ExtractAir.FireSupply.EN := TRUE;
				GreenMaster.GetParameters().Regulation.ExtractAir.FireSupply.Speed := 0.4;
				GreenMaster.GetParameters().Regulation.SupplyAir.FireExhaust.EN := TRUE;
				GreenMaster.GetParameters().Regulation.SupplyAir.FireExhaust.Speed := 0.4;
				GreenMaster.GetParameters().Regulation.SupplyAir.FireSupply.EN := TRUE;
				GreenMaster.GetParameters().Regulation.SupplyAir.FireSupply.Speed := 0.4;
				GreenMaster.GetParameters().Regulation.SupplyAir.KFactor := 151.4;
				GreenMaster.GetParameters().Regulation.SupplyAir.FireExhaust.EN := FALSE;
				GreenMaster.GetParameters().Regulation.SupplyAir.FireExhaust.Speed := 0;
				GreenMaster.GetParameters().Alarm.Polarity.B.Tx1Fail := TRUE;
				GreenMaster.GetParameters().Alarm.Enabled.B.Pump1 := FALSE;
				ADS_ParallelUnits.Tags.Settings.Kp := 1;
				ADS_ParallelUnits.Tags.Settings.fTn := T#800S;
				ADS_ParallelUnits.Tags.Settings.SupplyAirSetPointAdjustment.Curve.Y1 := 160;
				ADS_ParallelUnits.Tags.Settings.SupplyAirSetPointAdjustment.Curve.Y2 := 160;
				ADS_ParallelUnits.Tags.Settings.SupplyAirSetPointAdjustment.Curve.Y3 := 160;
				ADS_ParallelUnits.Tags.Settings.SupplyAirSetPointAdjustment.Curve.Y4 := 160;
				ADS_ParallelUnits.Tags.Settings.SupplyAirSetPointAdjustment.Curve.Y5 := 160;
				ADS_ParallelUnits.Tags.Settings.SupplyAirSetPointAdjustment.Curve.Y6 := 160;
				ADS_ParallelUnits.Tags.Settings.SupplyAirSetPointAdjustment.Curve.Y7 := 160;
				ADS_ParallelUnits.Tags.Settings.SupplyAirSetPointAdjustment.Curve.Y8 := 160;
				ADS_ParallelUnits.Tags.Settings.SupplyAirSetPointAdjustment.Curve.Y9 := 160;
				
				ADS_ParallelUnits.Tags.Settings.ExtractAirSetPointAdjustment.Curve.Y1 := 150;
				ADS_ParallelUnits.Tags.Settings.ExtractAirSetPointAdjustment.Curve.Y2 := 150;
				ADS_ParallelUnits.Tags.Settings.ExtractAirSetPointAdjustment.Curve.Y3 := 150;
				ADS_ParallelUnits.Tags.Settings.ExtractAirSetPointAdjustment.Curve.Y4 := 150;
				ADS_ParallelUnits.Tags.Settings.ExtractAirSetPointAdjustment.Curve.Y5 := 150;
				ADS_ParallelUnits.Tags.Settings.ExtractAirSetPointAdjustment.Curve.Y6 := 150;
				ADS_ParallelUnits.Tags.Settings.ExtractAirSetPointAdjustment.Curve.Y7 := 150;
				ADS_ParallelUnits.Tags.Settings.ExtractAirSetPointAdjustment.Curve.Y8 := 150;
				ADS_ParallelUnits.Tags.Settings.ExtractAirSetPointAdjustment.Curve.Y9 := 150;
				
				GreenMaster.GetParameters().Regulation.Temperature.Control.SP := 0;
				GreenMaster.GetParameters().Regulation.Temperature.SetPointAdjustment.Curve.Y1 := 20;
				GreenMaster.GetParameters().Regulation.Temperature.SetPointAdjustment.Curve.Y2 := 20;
				GreenMaster.GetParameters().Regulation.Temperature.SetPointAdjustment.Curve.Y3 := 20;
				GreenMaster.GetParameters().Regulation.Temperature.SetPointAdjustment.Curve.Y4 := 20;
				GreenMaster.GetParameters().Regulation.Temperature.SetPointAdjustment.Curve.Y5 := 20;
				GreenMaster.GetParameters().Regulation.Temperature.SetPointAdjustment.Curve.Y6 := 20;
				GreenMaster.GetParameters().Regulation.Temperature.SetPointAdjustment.Curve.Y7 := 20;
				GreenMaster.GetParameters().Regulation.Temperature.SetPointAdjustment.Curve.Y8 := 20;
				GreenMaster.GetParameters().Regulation.Temperature.SetPointAdjustment.Curve.Y9 := 20;
			END_IF
			IF F_ToUCase(HostName.sHostName) = 'STU_E6-LB03' THEN
				GreenMaster.GetParameters().Regulation.Temperature.HeaterOutputDirection := HeaterOutputDirections.DecreaseToHeat;
				GreenMaster.GetParameters().Regulation.ExtractAir.KFactor := 111;
				GreenMaster.GetParameters().Regulation.ExtractAir.FireExhaust.EN := FALSE;
				GreenMaster.GetParameters().Regulation.ExtractAir.FireExhaust.Speed := 0;
				GreenMaster.GetParameters().Regulation.ExtractAir.FireSupply.EN := FALSE;
				GreenMaster.GetParameters().Regulation.ExtractAir.FireSupply.Speed := 0;
				GreenMaster.GetParameters().Regulation.SupplyAir.KFactor := 111;
				GreenMaster.GetParameters().Regulation.SupplyAir.FireExhaust.EN := FALSE;
				GreenMaster.GetParameters().Regulation.SupplyAir.FireExhaust.Speed := 0;
				GreenMaster.GetParameters().Alarm.Polarity.B.Pump1 := TRUE;
			END_IF
			IF F_ToUCase(HostName.sHostName) = 'STU_E6-LB01' OR F_ToUCase(HostName.sHostName) = 'STU_E6-LB02' THEN
				GetComponent(Name := ComponentNames.PARALLEL_UNITS).EN := TRUE;
				GreenMaster.GetParameters().Regulation.Temperature.HeaterOutputDirection := HeaterOutputDirections.IncreaseToHeat;
				GreenMaster.GetParameters().Regulation.ExtractAir.KFactor := 111;
				GreenMaster.GetParameters().Regulation.ExtractAir.FireExhaust.EN := FALSE;
				GreenMaster.GetParameters().Regulation.ExtractAir.FireExhaust.Speed := 0;
				GreenMaster.GetParameters().Regulation.ExtractAir.FireSupply.EN := FALSE;
				GreenMaster.GetParameters().Regulation.ExtractAir.FireSupply.Speed := 0;
				GreenMaster.GetParameters().Regulation.SupplyAir.FireExhaust.EN := FALSE;
				GreenMaster.GetParameters().Regulation.SupplyAir.FireExhaust.Speed := 0;
				GreenMaster.GetParameters().Regulation.SupplyAir.FireSupply.EN := FALSE;
				GreenMaster.GetParameters().Regulation.SupplyAir.FireSupply.Speed := 0;
				GreenMaster.GetParameters().Regulation.SupplyAir.KFactor := 111;
				GreenMaster.GetParameters().Regulation.SupplyAir.FireExhaust.EN := FALSE;
				GreenMaster.GetParameters().Regulation.SupplyAir.FireExhaust.Speed := 0;
				GreenMaster.GetParameters().Alarm.Polarity.B.Tx1Fail := TRUE;
				ADS_ParallelUnits.Tags.Settings.SupplyAirSetPointAdjustment.Curve.Y1 := 250;
				ADS_ParallelUnits.Tags.Settings.SupplyAirSetPointAdjustment.Curve.Y2 := 250;
				ADS_ParallelUnits.Tags.Settings.SupplyAirSetPointAdjustment.Curve.Y3 := 250;
				ADS_ParallelUnits.Tags.Settings.SupplyAirSetPointAdjustment.Curve.Y4 := 250;
				ADS_ParallelUnits.Tags.Settings.SupplyAirSetPointAdjustment.Curve.Y5 := 250;
				ADS_ParallelUnits.Tags.Settings.SupplyAirSetPointAdjustment.Curve.Y6 := 250;
				ADS_ParallelUnits.Tags.Settings.SupplyAirSetPointAdjustment.Curve.Y7 := 250;
				ADS_ParallelUnits.Tags.Settings.SupplyAirSetPointAdjustment.Curve.Y8 := 250;
				ADS_ParallelUnits.Tags.Settings.SupplyAirSetPointAdjustment.Curve.Y9 := 250;
				
				ADS_ParallelUnits.Tags.Settings.ExtractAirSetPointAdjustment.Curve.Y1 := 280;
				ADS_ParallelUnits.Tags.Settings.ExtractAirSetPointAdjustment.Curve.Y2 := 280;
				ADS_ParallelUnits.Tags.Settings.ExtractAirSetPointAdjustment.Curve.Y3 := 280;
				ADS_ParallelUnits.Tags.Settings.ExtractAirSetPointAdjustment.Curve.Y4 := 280;
				ADS_ParallelUnits.Tags.Settings.ExtractAirSetPointAdjustment.Curve.Y5 := 280;
				ADS_ParallelUnits.Tags.Settings.ExtractAirSetPointAdjustment.Curve.Y6 := 280;
				ADS_ParallelUnits.Tags.Settings.ExtractAirSetPointAdjustment.Curve.Y7 := 280;
				ADS_ParallelUnits.Tags.Settings.ExtractAirSetPointAdjustment.Curve.Y8 := 280;
				ADS_ParallelUnits.Tags.Settings.ExtractAirSetPointAdjustment.Curve.Y9 := 280;
				
				GreenMaster.GetParameters().Regulation.Temperature.Control.SP := 0;
				GreenMaster.GetParameters().Regulation.Temperature.SetPointAdjustment.Curve.Y1 := 20;
				GreenMaster.GetParameters().Regulation.Temperature.SetPointAdjustment.Curve.Y2 := 20;
				GreenMaster.GetParameters().Regulation.Temperature.SetPointAdjustment.Curve.Y3 := 20;
				GreenMaster.GetParameters().Regulation.Temperature.SetPointAdjustment.Curve.Y4 := 20;
				GreenMaster.GetParameters().Regulation.Temperature.SetPointAdjustment.Curve.Y5 := 20;
				GreenMaster.GetParameters().Regulation.Temperature.SetPointAdjustment.Curve.Y6 := 20;
				GreenMaster.GetParameters().Regulation.Temperature.SetPointAdjustment.Curve.Y7 := 20;
				GreenMaster.GetParameters().Regulation.Temperature.SetPointAdjustment.Curve.Y8 := 20;
				GreenMaster.GetParameters().Regulation.Temperature.SetPointAdjustment.Curve.Y9 := 20;
			END_IF
			IF F_ToUCase(HostName.sHostName) = 'AIRPLC-DEMO' THEN
				GetComponent(Name := ComponentNames.PARALLEL_UNITS).EN := TRUE;
				GetComponent(Name := ComponentNames.SIMULATION).EN := TRUE;
				GreenMaster.GetParameters().System.Operation.Simulation := TRUE;
				GreenMaster.GetParameters().Regulation.Temperature.HeaterOutputDirection := HeaterOutputDirections.IncreaseToHeat;
				GreenMaster.GetParameters().Regulation.ExtractAir.KFactor := 111;
				GreenMaster.GetParameters().Regulation.ExtractAir.FireExhaust.EN := FALSE;
				GreenMaster.GetParameters().Regulation.ExtractAir.FireExhaust.Speed := 0;
				GreenMaster.GetParameters().Regulation.SupplyAir.KFactor := 111;
				GreenMaster.GetParameters().Regulation.SupplyAir.FireExhaust.EN := FALSE;
				GreenMaster.GetParameters().Regulation.SupplyAir.FireExhaust.Speed := 0;
				//GreenMaster.GetParameters().Regulation.SupplyAir.MaxSpeed := 0.4;
				//GreenMaster.GetParameters().Regulation.ExtractAir.MaxSpeed := 0.4;
			END_IF
			IF F_ToUCase(HostName.sHostName) = 'CX-662AA1' THEN
				GetComponent(Name := ComponentNames.PARALLEL_UNITS).EN := TRUE;
				GetComponent(Name := ComponentNames.SIMULATION).EN := TRUE;
				GreenMaster.GetParameters().System.Operation.Simulation := TRUE;
				GreenMaster.GetParameters().Regulation.Temperature.HeaterOutputDirection := HeaterOutputDirections.IncreaseToHeat;
				GreenMaster.GetParameters().Regulation.ExtractAir.KFactor := 111;
				GreenMaster.GetParameters().Regulation.ExtractAir.FireExhaust.EN := FALSE;
				GreenMaster.GetParameters().Regulation.ExtractAir.FireExhaust.Speed := 0;
				GreenMaster.GetParameters().Regulation.SupplyAir.KFactor := 111;
				GreenMaster.GetParameters().Regulation.SupplyAir.FireExhaust.EN := FALSE;
				GreenMaster.GetParameters().Regulation.SupplyAir.FireExhaust.Speed := 0;
				GreenMaster.GetParameters().Regulation.SupplyAir.MaxSpeed := 0.4;
				GreenMaster.GetParameters().Regulation.ExtractAir.MaxSpeed := 0.4;
			END_IF
			IF (F_ToUCase(HostName.sHostName) = 'DIGINET-1') or (F_ToUCase(HostName.sHostName) = 'DIGINET-2') THEN
				GetComponent(Name := ComponentNames.PARALLEL_UNITS).EN := TRUE;
				GetComponent(Name := ComponentNames.SIMULATION).EN := TRUE;
				GreenMaster.GetParameters().System.Operation.Simulation := TRUE;
				GreenMaster.GetParameters().Regulation.Temperature.HeaterOutputDirection := HeaterOutputDirections.IncreaseToHeat;
				GreenMaster.GetParameters().Regulation.ExtractAir.KFactor := 111;
				GreenMaster.GetParameters().Regulation.ExtractAir.FireExhaust.EN := TRUE;
				GreenMaster.GetParameters().Regulation.ExtractAir.FireExhaust.Speed := 0.5;
				GreenMaster.GetParameters().Regulation.SupplyAir.KFactor := 111;
				GreenMaster.GetParameters().Regulation.SupplyAir.FireExhaust.EN := FALSE;
				GreenMaster.GetParameters().Regulation.SupplyAir.FireExhaust.Speed := 0;
				GreenMaster.GetParameters().system.Operation.StartupHeatRecoveryTime := T#30S;
				GreenMaster.GetParameters().system.Operation.ExhaustFanStartupDelay := T#10S;
				GreenMaster.GetParameters().system.Operation.SupplyFanStartupDelay := T#20S;
				GreenMaster.GetParameters().system.Operation.StartupDamperWaitTime := T#5S;
			END_IF
			GreenMaster.GetParameters().System.ProjectDefaultSet := TRUE;
		END_IF
		
		IF GreenMaster.Parameters.System.Operation.IoUpdateEN THEN
			GreenMasterDI(DIn := Globals.IO.DIn, DInLevels := GreenMaster.Parameters.IO.DInLevels);
			GreenMasterDO(DOut := Globals.IO.DOut);
			GreenMasterAI(AIn := Globals.IO.AIn);
			GreenMasterAO(AOut := Globals.IO.AOut);
			GreenMasterAI2_RTU(Parameters:=GreenMaster.GetParameters(), EN:= TRUE);
		END_IF
		
		Std_Interface(EN := GetComponent(Name := ComponentNames.GM_OPT_STD).EN, AIn := Globals.IO.AIn);
		
		// Redundant drift
		IF GetComponent(Name := ComponentNames.REDUNDANCY).EN THEN
			Redundancy(	EN := GetComponent(Name := ComponentNames.REDUNDANCY).EN,
						_UPPSTART_DONE:=StartupDone,
						_TF_CMD:=GreenMaster.Parameters.Regulation.SupplyAir.Control.CV > 0,
						_TF_V:=GreenMaster.Parameters.Regulation.SupplyAir.Control.CV > 0 AND GreenMaster.GetCurrentSupplyAirPV() > 10,
						_TF_OP:=LREAL_TO_REAL(GreenMaster.Parameters.Regulation.SupplyAir.Control.CV),
						_TL_GP_PV:=LREAL_TO_REAL(GreenMaster.GetCurrentSupplyAirPV()),
						_FF_CMD:=GreenMaster.Parameters.Regulation.ExtractAir.Control.CV > 0,
						_FF_V:=GreenMaster.Parameters.Regulation.ExtractAir.Control.CV > 0 AND GreenMaster.GetCurrentExtractAirPV() > 10,
						_FF_OP:=LREAL_TO_REAL(GreenMaster.Parameters.Regulation.ExtractAir.Control.CV),
						_FL_GP_PV:=LREAL_TO_REAL(GreenMaster.GetCurrentExtractAirPV()),
						_SERVICEBRYTARE:=FALSE
						);
		END_IF
		// Parallel units
		IF GetComponent(Name := ComponentNames.PARALLEL_UNITS).EN THEN
			ParallelUnits(	EN := GetComponent(Name := ComponentNames.PARALLEL_UNITS).EN,
							Tags := ADS_ParallelUnits.Tags,
							Parameters := GreenMaster.Parameters 
						);
		END_IF
		
		IF GetComponent(Name := ComponentNames.GM_BASE).EN THEN
			GreenMaster.Update(DO_ := GreenMasterDO, AO := GreenMasterAO);
			GreenMaster(
				EN := TRUE AND (NOT DebugStop),
				RemoteEN := GreenMaster.Parameters.System.Operation.RemoteEN, //Std_Interface.ENO OR CTH_Interface.ENO OR Stena_Interface.ENO,	// TODO: Varför bara CTH här i original?  
				DI := GreenMasterDI,
				AI := GreenMasterAI,
				AI2 := GreenMasterAI2_RTU,
				TCP_AI := SmokeControl.GreenMasterSmokeControl,  
				Reverse_C_QN1 := UseReverse_C_QN1,
				NightCooling := GreenMaster.Parameters.Regulation.NightCooling,
				EnableFansAndDampers := Std_Interface.EN,
				ExtraFireSupplyAlarm := ParallelUnits.FireSupplyAlarm,
				ExtraFireExtractAlarm := ParallelUnits.FireExtractAlarm
			);
		END_IF
		
		IF GetComponent(Name := ComponentNames.SIMULATION).EN THEN
			IF GreenMaster.GetParameters().System.Operation.Simulation THEN
				GreenMaster.Simulation(Parameters := GreenMaster.GetParameters(), Simulation := GreenMaster.GetParameters().Simulation);			
			END_IF
		END_IF
		
		AnySensorError := GreenMaster.Parameters.IO.AIn.F_BT1_Error OR 
			GreenMaster.Parameters.IO.AIn.T_BT2_Error OR
			GreenMaster.Parameters.IO.AIn.T_BT3_Error OR
			GreenMaster.Parameters.IO.AIn.H_BT1_Error OR
			GreenMaster.Parameters.IO.AIn.T_BT1_Error OR
			GreenMaster.Parameters.IO.AIn.BT1_Error OR
			GreenMaster.Parameters.IO.AIn.BT2_Error OR
			GreenMaster.Parameters.IO.AIn.F_BT2_Error OR	
			GreenMaster.Parameters.IO.AIn.F_BP1_Error OR
			GreenMaster.Parameters.IO.AIn.T_BP1_Error OR
			GreenMaster.Parameters.IO.AIn.F_BP2_Error OR
			GreenMaster.Parameters.IO.AIn.T_BP2_Error OR
			GreenMaster.Parameters.IO.AIn.F_BP3_Error OR
			GreenMaster.Parameters.IO.AIn.T_BF1_Error OR
			GreenMaster.Parameters.IO.AIn.F_BF1_Error;	
		
		
		// Save persistent data on power off or fail
		Saver();
		WritePersistentData(NETID := '', PORT := 851, TMOUT := T#10S, START := StartWritePersistentData);
		
		DevMon(Value := DevValue, TargetValue := 5);
		
		IF GetComponent(Name := ComponentNames.EXTRA_ALARMS).EN THEN	
			GreenMaster.GetParameters().Alarm.Status.A.AL01 := NOT ExtraAlarmInputs.AL01;
			GreenMaster.GetParameters().Alarm.Status.A.AL02 := NOT ExtraAlarmInputs.AL02;
			GreenMaster.GetParameters().Alarm.Status.A.AL03 := NOT ExtraAlarmInputs.AL03;
			GreenMaster.GetParameters().Alarm.Status.A.AL04 := NOT ExtraAlarmInputs.AL04;
			GreenMaster.GetParameters().Alarm.Status.A.AL05 := NOT ExtraAlarmInputs.AL05;
			GreenMaster.GetParameters().Alarm.Status.A.AL06 := NOT ExtraAlarmInputs.AL06;
			GreenMaster.GetParameters().Alarm.Status.A.AL07 := NOT ExtraAlarmInputs.AL07;
			GreenMaster.GetParameters().Alarm.Status.A.AL08 := NOT ExtraAlarmInputs.AL08;
		END_IF
		ExtraAlarms_Interface(EN := GetComponent(Name := ComponentNames.EXTRA_ALARMS).EN);
		SmokeControl_Interface(EN := GetComponent(Name := ComponentNames.GM_SMOKE_CONTROL).EN);
		fbtime();
		IF Globals.SecondsCounter <> LastSecondsCounter THEN
			LastSecondsCounter := Globals.SecondsCounter;
			// 2021-11-10-08:08:53.582
			sTime := SYSTEMTIME_TO_STRING(fbTime.systemTime);
			sPart1 := Delete(sTime, 4, 20);
			sPart2 := Replace(sPart1, ' ', 1, 11);
			GreenMaster.GetParameters().System.SystemTime := sPart2;
		END_IF
	//__CATCH
	//	ExceptionYet := TRUE; 			
	//__ENDTRY
ELSE
	ExceptionYet := TRUE; 	
END_IF

FreezeHysteresis(Value := GreenMaster.GetParameters().IO.AIn.H_BT1, LimitValue := GreenMaster.GetParameters().Alarm.Limits.A.Freeze, Offset := 0.5);
CurrentFreezeAlarm := FreezeHysteresis.Below OR GreenMaster.GetParameters().IO.AIn.H_BT1_Error;
GreenMaster.GetParameters().Alarm.Status.A.Freeze := CurrentFreezeAlarm  OR	ParallelUnits.FreezeAlarm;
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>
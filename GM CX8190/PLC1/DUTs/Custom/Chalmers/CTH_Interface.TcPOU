<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="CTH_Interface" Id="{7657d0f0-b2f9-4dd1-84cb-0210d99e1342}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK CTH_Interface
VAR_INPUT
	AIn: REFERENCE TO AnalogInputs;
	EN: BOOL;
END_VAR
VAR_OUTPUT
	ENO: BOOL;
	FirePanelActive: BOOL;
	NightCooling: bool;
END_VAR
VAR
	InitDone: BOOL;
	PreEN: bool;
	Parameters: REFERENCE TO GreenMasterBaseParameters;
	GM_XXL: REFERENCE TO GreenMasterXXL_FB;
	bTemp: BOOL;
	lrTemp: LREAL;
	tTemp: TIME;
	ltTemp: LTIME;
	modeTemp: FanControlTypes;
	FirstTime: BOOL;
	TimeChannelActive: BOOL;
	TimeChannelEnabled: BOOL;
	n: UINT;
	TimeChannel1: TimeChannel1CH;
	TimeChannel2: TimeChannel1CH;
	TimeChannel3: TimeChannel1CH;
	TimeChannelFallback: TimeChannel1CH;
	FirePanelCTH: FirePanelCTH;
	SetPointAdjustment: SetPointAdjustment;
	CurrentPV: LREAL;
	
	FirePanelWasActive: BOOL;	
	SavedDisabledStates: AlarmSignals;
	AlarmSignalsTrueExceptFirePanel: AlarmSignals;
	StatusP: POINTER TO ARRAY [0..SIZEOF(AlarmSignals) - 1] OF BOOL;
	AlarmCount: UINT := SIZEOF(AlarmSignals);	
	P2Hyst: Hysteresis;
	P2Temp: BOOL;
	VvXHyst: Hysteresis;
	Loop: INT;
	StartupTransferToADS: bool;
END_VAR
VAR PERSISTENT
	SavedSettings: GreenMasterSettingsCTH2;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF NOT InitDone THEN
	Parameters REF= Main.GreenMaster.GetParameters();
	GM_XXL REF= Main.GreenMaster;
	IF NOT InitDone THEN
		StartupTransferToADS := TRUE;
	ELSE
		StartupTransferToADS := FALSE;
	END_IF
	InitDone := TRUE;
END_IF;
Loop := Loop + 1;
IF EN THEN
	
	IF Loop > 20 THEN
		Loop := 0;
		Globals.IO.DOut.DO15 := Parameters.Alarm.Active.A.FireExtract OR Parameters.Alarm.Active.A.FireSupply;
		Parameters.System.Operation.FireDamperUsed := FALSE;		
		P2Hyst(Value := Parameters.IO.AIn.T_BT2, LimitValue := ADS_CTH.Tags.Settings.P2_TEMP_LIM_V, Offset := 0.5);
		P2Temp := FALSE;
		IF P2Hyst.Below THEN
			P2Temp := TRUE;	
		ELSE
			IF Parameters.IO.AOut.F_QN1 > 0.05 THEN
				P2Temp := TRUE;					
			END_IF
			IF Parameters.IO.AOut.F_QN1 < 0.02 THEN
				P2Temp := FALSE;					
			END_IF
		END_IF
		IF 	NOT (Parameters.System.Operation.State = SystemStates.Run OR
			Parameters.System.Operation.State = SystemStates.StartupHeatRecovery) THEN
			P2Temp := FALSE;
		END_IF
		VvXHyst(Value := Parameters.IO.AIn.F_BP3, LimitValue := Parameters.Alarm.Limits.B.HeatExchangerHighPressure, Offset := 5);
		IF VvXHyst.Above THEN
			P2Temp := TRUE;
			GM_XXL.Disable := FALSE;
		ELSE
			GM_XXL.Disable := TRUE;
		END_IF
		Parameters.IO.DOut.P2 := P2Temp;	
		
		FirePanelCTH(	Parameters := Parameters,
						StartSupplyFan := Parameters.IO.DIn.FirePanelSupplyStart,
						StopSupplyFan := Parameters.IO.DIn.FirePanelSupplyStop,
						SupplyDamperOpen := TRUE,
						StartExtractFan := Parameters.IO.DIn.FirePanelExtractStart,
						StopExtractFan := Parameters.IO.DIn.FirePanelExtractStop,
						ExtractDamperOpen := TRUE,
						SupplyDamper := Parameters.IO.DOut.T_QM2,
						ExtractDamper := Parameters.IO.DOut.F_QM1
		);
			
		ADS_CTH.Tags.Settings.POST_RUN_FANS := TO_TIME(Parameters.System.Operation.PostVentilationTime);
		
		ADS_CTH.Tags.Status.P2_AL := Parameters.Alarm.Active.B.Pump2; 
		ADS_CTH.Tags.Status.P2_CMD := Parameters.IO.DOut.P2; 
		ADS_CTH.Tags.Status.P2_V1 := Parameters.IO.DIn.P2_Running; 
		
		ADS_CTH.Tags.Status.HANDSTARTED_TF_AL := Parameters.Alarm.Status.A.FirePanelSupplyStart; 
		ADS_CTH.Tags.Status.HANDSTOPPED_TF_AL := Parameters.Alarm.Status.A.FirePanelSupplyStop; 
		ADS_CTH.Tags.Status.HANDSTARTED_FF_AL := Parameters.Alarm.Status.A.FirePanelExtractStart; 
		ADS_CTH.Tags.Status.HANDSTOPPED_FF_AL := Parameters.Alarm.Status.A.FirePanelExtractStop; 
		ADS_CTH.Tags.Status.BAD_SUPPLY_DAMPER_POS_AL := Parameters.Alarm.Active.A.SupplyDamperError;
		ADS_CTH.Tags.Status.BAD_EXTRACT_DAMPER_POS_AL := Parameters.Alarm.Active.A.ExtractDamperError;
		
		ADS_CTH.Tags.Status.GP83_PV := TO_REAL(Parameters.IO.AIn.F_BP3);
		//ADS_CTH.Tags.Status.GP83_AHL := Parameters.Alarm.Limits.B.HeatExchangerHighPressure;
		//ADS_CTH.Tags.Status.GP83_AD := Parameters.Alarm.Delay.B.HeatExchangerHighPressure;
		ADS_CTH.Tags.Status.GP83_HAL := Parameters.Alarm.Active.B.HeatExchangerHighPressure;
		IF NOT Parameters.IO.AOutOverride.F_QN1_Override THEN
			ADS_CTH.Tags.Status.SV31_OP := TO_REAL(Parameters.IO.AOut.F_QN1);
		ELSE
			ADS_CTH.Tags.Status.SV31_OP := TO_REAL(Parameters.IO.AOutOverride.F_QN1_OverrideValue);
		END_IF
		ADS_CTH.Tags.Status.GT21_PV := Globals.IO.AIn.AI09 / 100.0;
		ADS_CTH.Tags.Status.GT21_FAULT := Globals.IO.AIn.AI09_Error;
		ADS_CTH.Tags.Status.GT44_PV := Globals.IO.AIn.AI10 / 100.0;
		ADS_CTH.Tags.Status.GT44_FAULT := Globals.IO.AIn.AI10_Error;
		ADS_CTH.Tags.Status.GT45_PV := Globals.IO.AIn.AI11 / 100.0;
		ADS_CTH.Tags.Status.GT45_FAULT := Globals.IO.AIn.AI11_Error;
		ADS_CTH.Tags.Status.GT46_PV := Globals.IO.AIn.AI12 / 100.0;
		ADS_CTH.Tags.Status.GT46_FAULT := Globals.IO.AIn.AI12_Error;
		ADS_CTH.Tags.Status.T_BT4_PV := Globals.IO.AIn.AI13 / 100.0;
		ADS_CTH.Tags.Status.T_BT4_FAULT := Globals.IO.AIn.AI13_Error;

		Parameters.Alarm.Status.B.ExpansionTank := Globals.IO.DIn.DI24;
		
		//Parameters.IO.AOutOverride.F_QN1_Override := ADS_CTH.Tags.Settings.F_QN1_Override_M;
		//Parameters.IO.AOutOverride.F_QN1_OverrideValue := ADS_CTH.Tags.Settings.F_QN1_OverrideValue_MCMD;
		Parameters.IO.AOutOverride.F_QN1_Override := ADS_CTH.Tags.Settings.SV31_M;
		Parameters.IO.AOutOverride.F_QN1_OverrideValue := ADS_CTH.Tags.Settings.SV31_OPM;
		Parameters.IO.AOutOverride.F_GQ1_Override := ADS_CTH.Tags.Settings.F_GQ1_Override_M;
		Parameters.IO.AOutOverride.F_GQ1_OverrideValue := ADS_CTH.Tags.Settings.F_GQ1_OverrideValue_MCMD;
		Parameters.IO.AOutOverride.T_GQ1_Override := ADS_CTH.Tags.Settings.T_GQ1_Override_M;
		Parameters.IO.AOutOverride.T_GQ1_OverrideValue := ADS_CTH.Tags.Settings.T_GQ1_OverrideValue_MCMD;
		Parameters.IO.AOutOverride.C_QN1_Override := ADS_CTH.Tags.Settings.C_QN1_Override_M;
		Parameters.IO.AOutOverride.C_QN1_OverrideValue := ADS_CTH.Tags.Settings.C_QN1_OverrideValue_MCMD;
		Parameters.IO.AOutOverride.H_QN1_Override := ADS_CTH.Tags.Settings.H_QN1_Override_M;
		Parameters.IO.AOutOverride.H_QN1_OverrideValue := ADS_CTH.Tags.Settings.H_QN1_OverrideValue_MCMD;

ADS_CTH.Tags.Status.F_QN1_Override_AL := Parameters.IO.AOutOverride.F_QN1_Override;
ADS_CTH.Tags.Status.T_GQ1_Override_AL := Parameters.IO.AOutOverride.T_GQ1_Override;
ADS_CTH.Tags.Status.F_GQ1_Override_AL := Parameters.IO.AOutOverride.F_GQ1_Override;
ADS_CTH.Tags.Status.C_QN1_Override_AL := Parameters.IO.AOutOverride.C_QN1_Override;
ADS_CTH.Tags.Status.H_QN1_Override_AL := Parameters.IO.AOutOverride.H_QN1_Override;
ADS_CTH.Tags.Status.AL_A_Override_AL := Parameters.IO.DOutOverride.AL_A_Override;
ADS_CTH.Tags.Status.H_GP1_Override_AL := Parameters.IO.DOutOverride.H_GP1_Override;
ADS_CTH.Tags.Status.C_GP1_Override_AL := Parameters.IO.DOutOverride.C_GP1_Override;
ADS_CTH.Tags.Status.F_QM1_Override_AL := Parameters.IO.DOutOverride.F_QM1_Override;
ADS_CTH.Tags.Status.T_QM2_Override_AL := Parameters.IO.DOutOverride.T_QM2_Override;
ADS_CTH.Tags.Status.R_QM1_Override_AL := Parameters.IO.DOutOverride.R_QM1_Override;
ADS_CTH.Tags.Status.F_QM2_Override_AL := Parameters.IO.DOutOverride.F_QM2_Override;
ADS_CTH.Tags.Status.T_QM1_1_Override_AL := Parameters.IO.DOutOverride.T_QM1_1_Override;
ADS_CTH.Tags.Status.T_QM1_2_Override_AL := Parameters.IO.DOutOverride.T_QM1_2_Override;
ADS_CTH.Tags.Status.T_QM1_3_Override_AL := Parameters.IO.DOutOverride.T_QM1_3_Override;
ADS_CTH.Tags.Status.T_QM1_4_Override_AL := Parameters.IO.DOutOverride.T_QM1_4_Override;
ADS_CTH.Tags.Status.T_QM1_5_Override_AL := Parameters.IO.DOutOverride.T_QM1_5_Override;
ADS_CTH.Tags.Status.T_QM1_6_Override_AL := Parameters.IO.DOutOverride.T_QM1_6_Override;
ADS_CTH.Tags.Status.T_RUN_Override_AL := Parameters.IO.DOutOverride.T_RUN_Override;
ADS_CTH.Tags.Status.F_RUN_Override_AL := Parameters.IO.DOutOverride.F_RUN_Override;
ADS_CTH.Tags.Status.P2_Override_AL := Parameters.IO.DOutOverride.P2_Override;
ADS_CTH.Tags.Status.AL_A_Override_AL := Parameters.IO.DOutOverride.AL_A_Override;
ADS_CTH.Tags.Status.AL_B_Override_AL := Parameters.IO.DOutOverride.AL_B_Override;
ADS_CTH.Tags.Status.AL_C_Override_AL := Parameters.IO.DOutOverride.AL_C_Override;
ADS_CTH.Tags.Status.AL_D_Override_AL := Parameters.IO.DOutOverride.AL_D_Override;

			
		FirePanelActive := FirePanelCTH.ENO;
		TimeChannelEnabled := FALSE;
		TimeChannelActive := FALSE;
		
		IF EN AND Parameters.System.Operation.RemoteEN THEN
			;
		END_IF
	END_IF
END_IF
]]></ST>
    </Implementation>
    <Method Name="IsFirePanelActive" Id="{315e5fb6-dd51-44a9-af3e-7f9d70bafef1}">
      <Declaration><![CDATA[METHOD IsFirePanelActive : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[FirePanelActive := FirePanelCTH.ENO;]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>
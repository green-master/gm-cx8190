<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="FirePanelCTH" Id="{93d1feb9-f4fa-4785-b533-e41d0b13e58f}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FirePanelCTH
VAR_IN_OUT
	Parameters: GreenMasterBaseParameters;
	SupplyDamper: BOOL;
	ExtractDamper: BOOL;
	SupplyFanAO: LREAL;
	ExtractFanAO: LREAL;
END_VAR
VAR_INPUT
	EN: BOOL;
	StartSupplyFan: BOOL;
	StopSupplyFan: BOOL;
	SupplyDamperOpen: BOOL;
	SupplyDamperClosed: BOOL;
	StartExtractFan: BOOL;
	StopExtractFan: BOOL;
	ExtractDamperOpen: BOOL;
	ExtractDamperClosed: BOOL;
END_VAR
VAR_OUTPUT
	ENO: BOOL;
	SupplyFanStarted: BOOL;
	SupplyFanStopped: BOOL;
	ExtractFanStarted: BOOL;
	ExtractFanStopped: BOOL;
END_VAR
VAR
	SupplyFanControl: FanControl;
	ExtractFanControl: FanControl;
	ControllerParameters: ControllerParameters;
	
	LastStartSupplyFan: BOOL;
	StartSupplyFanTON: TON;
	CurrentStartSupplyFan: BOOL;
	
	LastStopSupplyFan: BOOL;
	StopSupplyFanTON: TON;
	CurrentStopSupplyFan: BOOL;
	
	LastStartExtractFan: BOOL;
	StartExtractFanTON: TON;
	CurrentStartExtractFan: BOOL;
	
	LastStopExtractFan: BOOL;
	StopExtractFanTON: TON;
	CurrentStopExtractFan: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[StartSupplyFanTON(IN := StartSupplyFan, PT := T#100MS);
StopSupplyFanTON(IN := StopSupplyFan, PT := T#100MS);
StartExtractFanTON(IN := StartExtractFan, PT := T#100MS);
StopExtractFanTON(IN := StopExtractFan, PT := T#100MS);

CurrentStartSupplyFan := StartSupplyFanTON.Q; 
CurrentStopSupplyFan := StopSupplyFanTON.Q; 
CurrentStartExtractFan := StartExtractFanTON.Q; 
CurrentStopExtractFan := StopExtractFanTON.Q; 

IF 		Parameters.Alarm.Status.A.FirePanelSupplyStart OR 
		Parameters.Alarm.Status.A.FirePanelSupplyStop OR
		Parameters.Alarm.Status.A.FirePanelExtractStart OR
		Parameters.Alarm.Status.A.FirePanelExtractStop OR 
		CurrentStartSupplyFan OR
		CurrentStopSupplyFan OR
		CurrentStartExtractFan OR 
		CurrentStopExtractFan THEN
	ENO := TRUE;
END_IF
IF Parameters.Alarm.Control.ResetAlarms THEN
	Parameters.Alarm.Status.A.FirePanelSupplyStop := FALSE;
	Parameters.Alarm.Status.A.FirePanelExtractStart := FALSE;
	Parameters.Alarm.Status.A.FirePanelExtractStop := FALSE;
	Parameters.Alarm.Status.A.FirePanelSupplyStart := FALSE;
	ENO := FALSE;
END_IF
	
IF ENO THEN
	
	IF CurrentStartSupplyFan AND NOT LastStartSupplyFan THEN
		Parameters.Alarm.Status.A.FirePanelSupplyStop := FALSE;
		Parameters.Alarm.Status.A.FirePanelExtractStart := FALSE;
		Parameters.Alarm.Status.A.FirePanelExtractStop := FALSE;
		Parameters.Alarm.Status.A.FirePanelSupplyStart := TRUE;
	END_IF
	LastStartSupplyFan := CurrentStartSupplyFan;
	
	IF CurrentStopSupplyFan AND NOT LastStopSupplyFan THEN
		Parameters.Alarm.Status.A.FirePanelSupplyStart := FALSE;
		Parameters.Alarm.Status.A.FirePanelExtractStart := FALSE;
		Parameters.Alarm.Status.A.FirePanelExtractStop := FALSE;
		Parameters.Alarm.Status.A.FirePanelSupplyStop := TRUE;
	END_IF
	LastStopSupplyFan := CurrentStopSupplyFan;
	
	IF CurrentStartExtractFan AND NOT LastStartExtractFan THEN
		Parameters.Alarm.Status.A.FirePanelSupplyStop := FALSE;
		Parameters.Alarm.Status.A.FirePanelSupplyStart := FALSE;
		Parameters.Alarm.Status.A.FirePanelExtractStop := FALSE;
		Parameters.Alarm.Status.A.FirePanelExtractStart := TRUE;
	END_IF
	LastStartExtractFan := CurrentStartExtractFan;
	
	IF CurrentStopExtractFan AND NOT LastStopExtractFan THEN
		Parameters.Alarm.Status.A.FirePanelSupplyStop := FALSE;
		Parameters.Alarm.Status.A.FirePanelSupplyStart := FALSE;
		Parameters.Alarm.Status.A.FirePanelExtractStart := FALSE;
		Parameters.Alarm.Status.A.FirePanelExtractStop := TRUE;
	END_IF
	LastStopExtractFan := CurrentStopExtractFan;
	
	IF Parameters.Alarm.Status.A.FirePanelSupplyStart THEN
		SupplyDamper := TRUE;
		ControllerParameters.SP := ADS_CTH.Tags2.Settings.LA02_SupplyFanHighSpeed_SP;
		SupplyFanControl(	EN := SupplyDamperOpen, 
							ControlMode := FanControlTypes.Pressure, 
							ControlParameters := ControllerParameters, 
							Pressure := Parameters.IO.AIn.T_BP1,
							PostVentilationTime := LTIME#0S,
							Damper := SupplyDamperOpen,
							FanAlarm := TRUE,
							Parameters := Parameters);
		SupplyFanAO := SupplyFanControl.CV;	
	END_IF
	IF Parameters.Alarm.Status.A.FirePanelSupplyStop THEN
		SupplyDamper := FALSE;
		SupplyFanControl(EN := FALSE, Parameters := Parameters);
		SupplyFanAO := 0;
	END_IF
	
	IF Parameters.Alarm.Status.A.FirePanelExtractStart THEN
		ExtractDamper := TRUE;
		ControllerParameters.SP := ADS_CTH.Tags2.Settings.LA02_ExtractFanHighSpeed_SP;
		ExtractFanControl(	EN := ExtractDamperOpen, 
							ControlMode := FanControlTypes.Pressure, 
							ControlParameters := ControllerParameters, 
							Pressure := Parameters.IO.AIn.F_BP1,
							PostVentilationTime := LTIME#0S,
							Damper := ExtractDamperOpen,
							FanAlarm := TRUE,
							Parameters := Parameters);
		ExtractFanAO := ExtractFanControl.CV;	
	END_IF
	IF Parameters.Alarm.Status.A.FirePanelExtractStop THEN
		ExtractDamper := FALSE;
		ExtractFanControl(EN := FALSE, Parameters := Parameters);
		ExtractFanAO := 0;
	END_IF
	
ELSE
	IF ENO THEN
		SupplyFanAO := 0;
		ExtractFanAO := 0;
		SupplyDamper := FALSE;
		ExtractDamper := FALSE;
		SupplyFanControl(EN := FALSE, Parameters := Parameters);
		ExtractFanControl(EN := FALSE, Parameters := Parameters);
	END_IF
	IF SupplyDamperClosed AND ExtractDamperClosed THEN
		ENO := FALSE;
	END_IF
	SupplyFanStarted := FALSE;		
	SupplyFanStopped := FALSE;
	ExtractFanStarted := FALSE;
	ExtractFanStopped := FALSE;
END_IF
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>
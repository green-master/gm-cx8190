<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="DigitalOutputParametersFB" Id="{85648e1a-e841-444e-abc6-5abe348f319a}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK DigitalOutputParametersFB
VAR_INPUT
	DOut: DigitalOutputParameters;
END_VAR
VAR_OUTPUT
	H_GP1_OnTime: LTIME;
	F_QM1_OnTime: LTIME;
	F_QM2_OnTime: LTIME;
	T_QM2_OnTime: LTIME;
END_VAR
VAR
	H_GP1_LTON: Timer; // $(skip)
	F_QM1_LTON: Timer; // $(skip)
	F_QM2_LTON: Timer; // $(skip)
	T_QM2_LTON: Timer; // $(skip)
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[H_GP1_LTON(EN := DOut.H_GP1, ET => H_GP1_OnTime);
F_QM1_LTON(EN := DOut.F_QM1, ET => F_QM1_OnTime);
F_QM2_LTON(EN := DOut.F_QM2, ET => F_QM2_OnTime);
T_QM2_LTON(EN := DOut.T_QM2, ET => T_QM2_OnTime);
]]></ST>
    </Implementation>
    <Method Name="Update" Id="{c3e83810-423d-49ef-bca7-1df8d58ed7c0}">
      <Declaration><![CDATA[METHOD Update : BOOL
VAR_INPUT
	DO_: REFERENCE TO GreenMasterDO_Base;
	Parameters: REFERENCE TO GreenMasterBaseParameters;
	EnableWriteDampers: BOOL := TRUE;
END_VAR
VAR
	NotFire: BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[NotFire := NOT Main.GreenMaster.FireAlarm();
DO_.H_GP1 := ifc_bool(Parameters.IO.DOutOverride.H_GP1_Override AND NotFire, Parameters.IO.DOutOverride.H_GP1_OverrideValue, Parameters.IO.DOut.H_GP1);
DO_.C_GP1 := ifc_bool(Parameters.IO.DOutOverride.C_GP1_Override AND NotFire, Parameters.IO.DOutOverride.C_GP1_OverrideValue, Parameters.IO.DOut.C_GP1);
IF EnableWriteDampers THEN
	DO_.F_QM1 := ifc_bool(Parameters.IO.DOutOverride.F_QM1_Override AND NotFire, Parameters.IO.DOutOverride.F_QM1_OverrideValue, Parameters.IO.DOut.F_QM1);
	DO_.T_QM2 := ifc_bool(Parameters.IO.DOutOverride.T_QM2_Override AND NotFire, Parameters.IO.DOutOverride.T_QM2_OverrideValue, Parameters.IO.DOut.T_QM2);
END_IF
DO_.R_QM1 := ifc_bool(Parameters.IO.DOutOverride.R_QM1_Override AND NotFire, Parameters.IO.DOutOverride.R_QM1_OverrideValue, Parameters.IO.DOut.R_QM1);
DO_.F_QM2 := ifc_bool(Parameters.IO.DOutOverride.F_QM2_Override AND NotFire, Parameters.IO.DOutOverride.F_QM2_OverrideValue, Parameters.IO.DOut.F_QM2);
DO_.T_QM1_1 := ifc_bool(Parameters.IO.DOutOverride.T_QM1_1_Override AND NotFire, Parameters.IO.DOutOverride.T_QM1_1_OverrideValue, Parameters.IO.DOut.T_QM1_1);
DO_.T_QM1_2 := ifc_bool(Parameters.IO.DOutOverride.T_QM1_2_Override AND NotFire, Parameters.IO.DOutOverride.T_QM1_2_OverrideValue, Parameters.IO.DOut.T_QM1_2);
DO_.T_QM1_3 := ifc_bool(Parameters.IO.DOutOverride.T_QM1_3_Override AND NotFire, Parameters.IO.DOutOverride.T_QM1_3_OverrideValue, Parameters.IO.DOut.T_QM1_3);
DO_.T_QM1_4 := ifc_bool(Parameters.IO.DOutOverride.T_QM1_4_Override AND NotFire, Parameters.IO.DOutOverride.T_QM1_4_OverrideValue, Parameters.IO.DOut.T_QM1_4);
DO_.T_QM1_5 := ifc_bool(Parameters.IO.DOutOverride.T_QM1_5_Override AND NotFire, Parameters.IO.DOutOverride.T_QM1_5_OverrideValue, Parameters.IO.DOut.T_QM1_5);
DO_.T_QM1_6 := ifc_bool(Parameters.IO.DOutOverride.T_QM1_6_Override AND NotFire, Parameters.IO.DOutOverride.T_QM1_6_OverrideValue, Parameters.IO.DOut.T_QM1_6);
Parameters.IO.DOut.F_QM2_ActiveWhenStopped := FALSE;
DO_.SupplyRunning := Parameters.IO.DOut.T_RUN;
DO_.ExhaustRunning := Parameters.IO.DOut.F_RUN;

DO_.AlarmRelayA := Parameters.IO.DOut.AL_A;
DO_.AlarmRelayB := Parameters.IO.DOut.AL_B;
DO_.AlarmRelayC := Parameters.IO.DOut.AL_C;
DO_.AlarmRelayD := Parameters.IO.DOut.AL_D;
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>
<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="DeviationMonitor" Id="{dcb4d293-8c24-4f80-8a3f-089ab8e38d9c}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK DeviationMonitor
VAR_INPUT
	EN: BOOL := TRUE;
	Value: LREAL;
	TargetValue: LREAL := 100;
	DiffAllowed: LREAL := 5;
	Mode: DeviationMonitorMode := DeviationMonitorMode.Diff;
	Hysteresis: LREAL := 2;
	OnDelay: LTIME := LTIME#10S;
	OffDelay: LTIME := LTIME#5S;
END_VAR
VAR_OUTPUT
	ENO: BOOL;
	Error: BOOL;
END_VAR
VAR
	CurTimeOk: LTIME;
	CurTimeError: LTIME;
	TempError: BOOL;
	Hyst: Hysteresis;
	UseValue: LREAL;
	UseTargetValue: LREAL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[UseValue  := Value;
UseTargetValue := TargetValue;
IF Mode = DeviationMonitorMode.Diff THEN
	UseValue := ABS(UseValue - TargetValue);	
	UseTargetValue := DiffAllowed;
END_IF
Hyst(Value := UseValue, LimitValue := UseTargetValue, Offset := Hysteresis);
IF EN THEN
	IF (Mode = DeviationMonitorMode.Above) OR (Mode = DeviationMonitorMode.Diff) THEN
		TempError := Hyst.Above;
	ELSIF Mode = DeviationMonitorMode.Below THEN
		TempError := Hyst.Below;	
	END_IF
	IF NOT TempError THEN
		CurTimeOk := LTIME();
	END_IF
	IF TempError THEN
		CurTimeError := LTIME();
	END_IF
	IF Main.GreenMaster.GetParameters().System.Operation.State <> SystemStates.Run THEN
		TempError := False;
	END_IF
	IF (NOT Error) AND (LTIME() > (CurTimeOk + OnDelay)) THEN
		Error := TempError;
	END_IF; 
	IF Error AND (LTIME() > (CurTimeError + OffDelay)) THEN
		Error := TempError;
	END_IF;
ELSE
	CurTimeOk := LTIME();
	Error := FALSE;
END_IF
ENO := EN;]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>
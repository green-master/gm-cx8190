<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="TimeChannel1CH" Id="{817b1f2b-aa0c-4f9b-9e15-9571de197f24}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK TimeChannel1CH
VAR_INPUT
	Data: REFERENCE TO TimeChannel1CH_Data;
END_VAR
VAR_OUTPUT
END_VAR
VAR
	CurrentDay: WORD; // $(skip)
	DayMatch: BOOL; // $(skip)
	LocalSystemTime: FB_LocalSystemTime; // $(skip)
	IsOnTime: BOOL; // $(skip)
	MinuteOfDay: WORD; // $(skip)
	StartMinuteOfDay: WORD; // $(skip)
	EndMinuteOfDay: WORD; // $(skip)
	OnHour           : UINT;	(* Hour value of the switch-on time on the day $(skip) *)
	OnMinute         : UINT;	(* Minute value of the switch-on time on the day $(skip) *)
	OffHour          : UINT;	(* Hour value of the switch-off time on the day $(skip) *)
	OffMinute        : UINT;	(* Minute value of the switch-off time on the day $(skip) *)
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[Data.Error := FALSE;
OnHour := Data.OnTime / 100;
OnMinute := Data.OnTime MOD 100;
OffHour := Data.OffTime / 100;
OffMinute := Data.OffTime MOD 100;
LocalSystemTime(bEnable := TRUE);
IF Data.EN AND (NOT Data.Error) THEN
	IF LocalSystemTime.bValid THEN	
		CurrentDay := F_GetDayOfWeek(in := NowDT()); 
		DayMatch := Data.Day = TimerDays.AllDays OR (TO_WORD(Data.Day) = CurrentDay - 1);
		IF OnHour = OffHour AND OnMinute = OffMinute THEN
			Data.Q := FALSE;
		ELSE
			MinuteOfDay := LocalSystemTime.systemTime.wHour * 60 + LocalSystemTime.systemTime.wMinute;
			StartMinuteOfDay := OnHour * 60 + OnMinute;
			EndMinuteOfDay := OffHour * 60 + OffMinute;
			IsOnTime := MinuteOfDay >= StartMinuteOfDay AND MinuteOfDay < EndMinuteOfDay;
			Data.Q := DayMatch AND IsOnTime;				
			IF Data.Q AND Data.SingleShot THEN
				Data.EN := FALSE;
			END_IF
		END_IF
		Data.ENO := TRUE;
	ELSE
		Data.Q := FALSE;
		Data.ENO := FALSE;
	END_IF
ELSE
	Data.Q := FALSE;
	Data.ENO := FALSE;
END_IF
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>